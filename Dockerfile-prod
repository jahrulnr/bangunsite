FROM alpine:3.19

ENV PS1="\[\e]0;\u@\h: \w\a\]${whoami}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "

ENV PATH="/opt/venv/bin:/app:$PATH"
RUN echo "apps:x:0:0:root:/root:/bin/bash" >> /etc/passwd \
    && apk update && apk add --no-cache curl=8.5.0-r0 \
        shadow=4.14.2-r0 \
        bash=5.2.21-r0 \
        bash-completion=2.11-r6 \
        nginx=1.24.0-r15 \
        nginx-mod-stream=1.24.0-r15 \
        python3=3.11.6-r1 \
        git=2.43.0-r0 \
        php82=8.2.15-r0 \
        php82-phar=8.2.15-r0 \
        php82-fpm=8.2.15-r0 \
        php82-iconv=8.2.15-r0 \
        php82-mbstring=8.2.15-r0 \ 
        php82-gd=8.2.15-r0 \
        php82-xml=8.2.15-r0 \
        php82-zip=8.2.15-r0 \
        php82-curl=8.2.15-r0 \
        php82-opcache=8.2.15-r0 \
        php82-fileinfo=8.2.15-r0 \
        php82-session=8.2.15-r0 \
        php82-dom=8.2.15-r0 \
        php82-tokenizer=8.2.15-r0 \
        php82-exif=8.2.15-r0 \
        php82-xmlreader=8.2.15-r0 \
        php82-simplexml=8.2.15-r0 \
        php82-xmlwriter=8.2.15-r0 \
        php82-sqlite3=8.2.15-r0 \
        php82-pdo_sqlite=8.2.15-r0 \
        php82-openssl=8.2.15-r0 \
        php82-pecl-redis=6.0.2-r0 \
        php82-mysqli=8.2.15-r0 \
        php82-pdo_mysql=8.2.15-r0 \
        certbot=2.7.4-r0 \
        certbot-nginx=2.7.4-r0 \
    && python3 -m venv /opt/venv \
    && mkdir -p /run/php \
    # bypass hadolint
    && echo "wheel==0.42.0" >> /tmp/pip.txt \
    && echo "supervisor==4.2.5" >> /tmp/pip.txt \
    && echo "git+https://github.com/coderanger/supervisor-stdout" >> /tmp/pip.txt \
    && pip install --no-cache-dir -r /tmp/pip.txt  \
    \
    && groupmod -og 1000 nginx \ 
    && usermod -ou 1000 -g 1000 nginx \
    \
    && apk del shadow git \
    && curl -o /tmp/composer-setup.php https://getcomposer.org/installer \
    && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer \
    && rm -rf /tmp/* /var/cache/apk/* /lib/apk/* ~/.cache

COPY ./infra/nginx/nginx.conf /etc/nginx/
COPY ./infra/nginx/default.conf /etc/nginx/http.d/
COPY ./infra/nginx/stream.d /etc/nginx/stream.d
COPY ./infra/nginx/custom.d /etc/nginx/custom.d
COPY ./infra/php/php.ini /etc/php82/
COPY ./infra/php/php-fpm.conf /etc/php82/
COPY ./infra/php/www.conf /etc/php82/php-fpm.d/
COPY ./infra/supervisord.conf /etc/supervisord.conf
COPY ./infra/start.sh /run/
COPY --chown=nginx:nginx ./web /app
COPY --chown=nginx:nginx ./infra/.env-prod /app/.env
COPY ./infra/db.sqlite /app/database/
RUN chmod +x /app/artisan && chmod +x /run/start.sh

WORKDIR /app
USER nginx
RUN composer update --no-dev --no-cache --optimize-autoloader && \
    if [ ! -f /app/public/storage ] && [ ! -d /app/public/storage ]; then php artisan storage:link; fi
USER apps

EXPOSE 80
EXPOSE 443
EXPOSE 8000

CMD [ "/run/start.sh" ]
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 CMD [ "curl", "--fail", "localhost/healty.php" ]