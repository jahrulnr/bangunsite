name: BangunSite Build Action

env:
  IMAGE_NAME: bangunsite:latest

on: push

jobs:
  hadolin:
    name: hadolint
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@main
    - uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile-prod

  healty:
    needs: hadolin
    name: Healty check
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main' && success()

    steps:
    - uses: actions/checkout@main
    - name: Build
      run: docker build -f Dockerfile-prod --tag ${{ env.IMAGE_NAME }} .
    - name: Test run
      run: docker run -d --name bangunsite ${{ env.IMAGE_NAME }}
    - name: Wait for docker to finish building
      run: sleep 5
    - name: Check healty
      run: |
        docker exec -i bangunsite curl localhost/healty.php -s --connect-timeout 10
        docker exec -i bangunsite artisan key:generate > /dev/null && sleep 5
        docker exec -i bangunsite curl localhost:8000/healty -sf --connect-timeout 10
        docker stop bangunsite > /dev/null
        docker rm bangunsite > /dev/null
        docker rmi ${{ env.IMAGE_NAME }} > /dev/null
  
  build:
    needs: hadolin
    name: build image
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@main
    - name: Build container image
      run: docker build -f Dockerfile-prod --tag ${{ env.IMAGE_NAME }} .
    - name: Export image
      run: |
        mkdir -p images
        docker save ${{ env.IMAGE_NAME }} | gzip > images/bangunsite.tar.gz
    - uses: actions/upload-artifact@main
      with:
        name: bangunsite.tar.gz
        path: images

  push:
    needs: build
    name: push image
    runs-on: ubuntu-latest
    if: success() && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@main
    - uses: actions/download-artifact@main
      with:
        name: bangunsite.tar.gz
        path: images
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: push image
      run: |
        scp images/bangunsite.tar.gz ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/tmp/bangunsite.tar.gz
        ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cat /tmp/bangunsite.tar.gz | docker load && rm -f /tmp/bangunsite.tar.gz && exit"
    - name: cleanup
      run: rm -rf ~/.ssh images

  deploy:
    needs: push
    name: deploy
    runs-on: ubuntu-latest

    steps:
    - name: install ssh keys
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect and pull
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose up -d && sleep 1 && service containerlog restart && exit"
    - name: cleanup
      run: rm -rf ~/.ssh